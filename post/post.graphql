"""
원문과 번역문을 가진 번역된 콘텐츠를 나타내는 포스트
"""
type Post implements Node {
  """
  포스트의 전역 고유 ID
  """
  id: ID!

  """
  대상 언어로 된 포스트 제목
  """
  title: String!

  """
  대상 언어로 된 본문 내용
  """
  body: String

  """
  번역된 제목
  """
  translatedTitle: String

  """
  원문 언어의 문장 배열
  """
  originalSentences: [String!]!

  """
  번역된 언어의 문장 배열
  """
  translatedSentences: [String!]!

  """
  포스트가 생성된 시간
  """
  createdAt: DateTime!

  """
  포스트가 마지막으로 업데이트된 시간
  """
  updatedAt: DateTime!

  """
  이 포스트가 받은 좋아요 수
  """
  likesCount: Int!

  """
  이 포스트의 댓글 수
  """
  commentsCount: Int!

  """
  포스트 썸네일 이미지의 URL
  """
  thumbnailUrl: String

  """
  원문 포스트의 작성자
  """
  author: User

  """
  번역에 참여한 기여자들
  """
  participants(first: Int = 10, after: String): UserConnection!
}

# 포스트 전용 입력 타입들
"""
새 포스트 생성을 위한 입력
"""
input CreatePostInput {
  title: String!
  body: String!
  translatedTitle: String
  originalSentences: [String!]!
  translatedSentences: [String!]!
  thumbnailUrl: String
}

"""
기존 포스트 업데이트를 위한 입력
"""
input UpdatePostInput {
  id: ID!
  title: String
  body: String
  translatedTitle: String
  originalSentences: [String!]
  translatedSentences: [String!]
  thumbnailUrl: String
}

# 포스트 전용 응답 타입들
"""
포스트 생성 성공 응답
"""
type CreatePostSuccess implements MutationResponse {
  status: ResponseStatus!
  message: String
  post: Post!
}

"""
포스트 업데이트 성공 응답
"""
type UpdatePostSuccess implements MutationResponse {
  status: ResponseStatus!
  message: String
  post: Post!
}

"""
포스트 삭제 성공 응답
"""
type DeletePostSuccess implements MutationResponse {
  status: ResponseStatus!
  message: String
  deletedPostId: ID!
}

# 포스트 전용 에러 타입들
type PostNotFoundError implements Error {
  message: String!
  code: String!
  postId: ID!
}

type PostValidationError implements Error {
  message: String!
  code: String!
  field: String!
  value: String
}

# 포스트 작업을 위한 유니온 타입들
union CreatePostResponse =
  CreatePostSuccess
  | PostValidationError
  | UnauthorizedError

union UpdatePostResponse =
  UpdatePostSuccess
  | PostNotFoundError
  | PostValidationError
  | UnauthorizedError
  | ForbiddenError

union DeletePostResponse =
  DeletePostSuccess
  | PostNotFoundError
  | UnauthorizedError
  | ForbiddenError

union PostResult =
  Post
  | PostNotFoundError
  | UnauthorizedError

extend type Query {
  """
  페이지네이션된 포스트 목록 가져오기
  """
  posts(first: Int, after: String, last: Int, before: String): PostConnection!

  """
  ID로 특정 포스트 가져오기
  """
  post(id: ID!): PostResult!
}

extend type Mutation {
  """
  새 포스트 생성
  """
  createPost(input: CreatePostInput!): CreatePostResponse!

  """
  기존 포스트 업데이트
  """
  updatePost(input: UpdatePostInput!): UpdatePostResponse!

  """
  포스트 삭제
  """
  deletePost(id: ID!): DeletePostResponse!
}

"""
포스트 목록에 대한 연결
"""
type PostConnection {
  """
  페이지네이션을 위한 정보
  """
  pageInfo: PageInfo!

  """
  엣지 목록
  """
  edges: [PostEdge!]!

  """
  사용 가능한 포스트의 총 개수
  """
  totalCount: Int!
}

"""
연결에서의 엣지
"""
type PostEdge {
  """
  엣지 끝에 있는 항목
  """
  node: Post!

  """
  페이지네이션에 사용할 커서
  """
  cursor: String!
}

"""
연결에서 페이지네이션에 대한 정보
"""
type PageInfo {
  """
  앞으로 페이지네이션할 때 더 많은 항목이 있는가?
  """
  hasNextPage: Boolean!

  """
  뒤로 페이지네이션할 때 더 많은 항목이 있는가?
  """
  hasPreviousPage: Boolean!

  """
  뒤로 페이지네이션할 때 계속할 커서
  """
  startCursor: String

  """
  앞으로 페이지네이션할 때 계속할 커서
  """
  endCursor: String
}
